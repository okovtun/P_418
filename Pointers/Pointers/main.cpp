#include<iostream>
using namespace std;
using std::cin;
using std::cout;
using std::endl;

#define tab "\t"

//#define POINTERS_BASICS

void main()
{
	setlocale(LC_ALL, "");

#ifdef POINTERS_BASICS
	//cout << "Hello Pointers" << endl;
//			C/C++
	int a = 2;			//Объявление и инициализация переменной 'a';
	int* pa = &a;		//Объявление и инициализация указателя 'pa';
	cout << a << endl;	//Вывод значения переменной 'a' на экран;
	cout << &a << endl;	//Взятие адреса переменной 'a' прямо при выводе;
	cout << pa << endl;	//Вывод на экран адреса переменной 'a', хранящегося в указателе 'pa'
	cout << *pa << endl;

	int* pb;			//Объявление указателя
	int b = 3;			//Объявление переменной 'b';
	*pb = &b;
	cout << pb << endl;
	cout << *pb << endl;

	//int  - 'int';
	//int* - Указатель на 'int';
	//double  - 'double';
	//double* - Указатель на 'double';
	//char  - 'char';
	//char* - Указатель на 'char';  
#endif // POINTERS_BASICS

	//поскольку содержит адрес нулевого элемента массива, а следовательно, и всего массива

	const int n = 5;
	short arr[n] = { 3, 5, 8, 13, 21 };
	cout << *arr << endl;
	for (int i = 0; i < n; i++)
	{
		cout << *(arr + i) << tab;
	}
	cout << endl;
}

/*
---------------------------------------
Указатель (Pointer) - это переменная, которая содержит адрес.
Адрес - это число, длиной 4 Байта, означающее порядковый номер Байте в ОЗУ.
---------------------------------------
& - Оператор взятия адреса (Address-of operator);
* - Оператор разыменования (Dereference operator);	разименовывает указатель
---------------------------------------
+		позволяет складывать два адреса, либо адрес и число;
-		позволяет вычитать из одного адреса другой, либо из адреса вычитать число;
++		переход на следующую ячейку памяти;
--		переход на предыдущую ячейку памяти;
---------------------------------------
*/